{# templates/Back/GestionUser/_form.html.twig #}

{# Start the form with custom attributes, if needed #}
{{ form_start(form, {'attr': {'class': 'row g-3 needs-validation', 'novalidate': 'novalidate'} }) }}
 
     <div class="col-12">
        {{ form_label(form.email, 'Email', {'label_attr': {'class': 'form-label'}}) }}
           <div class="input-group has-validation">
                        <span class="input-group-text" id="inputGroupPrepend">@</span>
         {{ form_widget(form.email, {'attr': {'class': 'form-control' ,  'maxlength':'50' }}) }}
          <div class="invalid-feedback">Please enter a valid email address.</div>
                 </div>
                
    </div>

    
    <div class="col-12">
        {{ form_label(form.verificationCode, 'verificationCode', {'label_attr': {'class': 'form-label '}}) }}
  
{{ form_widget(form.verificationCode, {'attr': {'class': 'form-control', 'pattern': '^[0-9a-zA-Z]{6}$', 'maxlength': '6'}}) }}

           <div class="invalid-feedback">Please enter a valid code .</div>
</div>
    <div class="col-12">
        {{ form_label(form.Newpassword, 'Newpassword', {'label_attr': {'class': 'form-label '}}) }}
  
    {{ form_widget(form.Newpassword, {'attr': {'class': 'form-control', 'pattern': '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$',  'maxlength':'30'}}) }}

      
           <div class="invalid-feedback">Please enter a valid password (at least 8 characters, including uppercase, lowercase, and numbers).</div>
    </div>
    
    <div class="col-12">
        {{ form_label(form.Confirmpassword, 'Confirmpassword', {'label_attr': {'class': 'form-label '}}) }}
  
    {{ form_widget(form.Confirmpassword, {'attr': {'class': 'form-control', 'pattern': '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}$',  'maxlength':'30'}}) }}

      
           <div class="invalid-feedback">Please enter a valid password (at least 8 characters, including uppercase, lowercase, and numbers).</div>
    </div>

 <div class="col-12 text-center">
    <button id="update-button-edit" type="submit" class="btn" >Confirm</button>
</div>


{# End the form #}
{{ form_end(form) }}

<script>
document.addEventListener('DOMContentLoaded', function() {
    var form = document.querySelector('.needs-validation');
    
    form.addEventListener('submit', function(event) {
        if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
        }

        form.classList.add('was-validated');
    });
});



</script>

{# 

    document.addEventListener('DOMContentLoaded', function() {
        var emailField = document.getElementById('form_email');
        var verificationCodeField = document.getElementById('form_verificationCode');
        var newPasswordField = document.getElementById('form_Newpassword');
        var confirmPasswordField = document.getElementById('form_Confirmpassword');

        // Initially hide the verification code, new password, and confirm password fields
        verificationCodeField.style.display = 'none';
        newPasswordField.style.display = 'none';
        confirmPasswordField.style.display = 'none';

        emailField.addEventListener('change', function() {
            if (emailField.checkValidity()) {
                // Send an AJAX request to check the email validity
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === XMLHttpRequest.DONE) {
                        if (xhr.status === 200) {
                            // Email is valid, show the verification code field
                            verificationCodeField.style.display = 'block';
                        } else {
                            // Email is not valid, hide the verification code, new password, and confirm password fields
                            verificationCodeField.style.display = 'none';
                            newPasswordField.style.display = 'none';
                            confirmPasswordField.style.display = 'none';
                        }
                    }
                };
                xhr.open('POST', '{{ path('check_email') }}', true);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                xhr.send('email=' + encodeURIComponent(emailField.value));
            } else {
                // Email is not valid, hide the verification code, new password, and confirm password fields
                verificationCodeField.style.display = 'none';
                newPasswordField.style.display = 'none';
                confirmPasswordField.style.display = 'none';
            }
        });

        // More JavaScript code...
    });
 #}
